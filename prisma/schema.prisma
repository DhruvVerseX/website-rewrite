generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  role      Roles    @default(EDITOR)
  verified  Boolean  @default(false)
  firstTime Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Event {
  id                 String   @id @default(cuid())
  title              String
  slug               String   @unique
  description        String
  content            String
  date               DateTime
  location           String
  numberOfVolunteers Int?
  peopleImpacted     Int?
  duration           Int?
  coverImage         String
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  yearId             String
  featured           Boolean  @default(false)
  year               Year     @relation(fields: [yearId], references: [id], onDelete: Cascade)
}

model ActivityLog {
  id        String          @id @default(cuid())
  action    ActivityActions
  timestamp DateTime        @default(now())
  details   String?
}

model Year {
  id       String       @id @default(cuid())
  year     Int          @unique
  imageUrl String?
  events   Event[]
  roles    MemberRole[]
}

model Member {
  id        String       @id @default(cuid())
  name      String
  imageUrl  String
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  roles     MemberRole[]
}

model MemberRole {
  id         String     @id @default(cuid())
  position   Position
  memberType MemberType
  yearId     String
  memberId   String
  member     Member     @relation(fields: [memberId], references: [id], onDelete: Cascade)
  year       Year       @relation(fields: [yearId], references: [id], onDelete: Cascade)

  @@unique([memberId, yearId])
}

enum Roles {
  ADMIN
  EDITOR
}

enum ActivityActions {
  CREATE
  UPDATE
  DELETE
}

enum MemberType {
  COUNCIL
  DIRECTOR
  COORDINATOR
  MEMBER
}

enum Position {
  PRESIDENT
  SECRETARY
  VICE_PRESIDENT
  SERGEANT_AT_ARMS
  JOINT_SECRETARY
  TREASURER
  PUBLIC_RELATION_OFFICER
  CLUB_SERVICE
  COMMUNITY_SERVICE
  VOCATIONAL_SERVICE
  INTERNATIONAL_SERVICE
  LITERARY_SERVICE
  MULTIMEDIA_SERVICE
  PUBLIC_RELATION_SERVICES
  PHOTOGRAPHY_SERVICE
  SOCIAL_MEDIA
  PERFORMING_ARTS_HEAD
  TECHNICAL_SERVICES
  MANAGEMENT_TEAM_HEAD
  MEMBER
}
